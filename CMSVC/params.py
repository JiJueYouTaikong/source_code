import argparse
import numpy as np
import os
import random
import torch


def params():
    parser = argparse.ArgumentParser()
    parser.add_argument('--scity', type=str, default='NY')
    parser.add_argument('--scity2', type=str, default='CHI')
    parser.add_argument('--scity3', type=str, default='BJ')
    parser.add_argument('--tcity', type=str, default='DC')
    parser.add_argument('--dataname', type=str, default='Taxi')
    parser.add_argument('--datatype', type=str, default='pickup')
    parser.add_argument('--batch_size', type=int, default=32)
    parser.add_argument('--batch_size_time_sample', type=int, default=64)
    parser.add_argument("--model", type=str, default='STNet_nobn')
    parser.add_argument('--learning_rate', type=float, default=1e-3)
    parser.add_argument('--weight_decay', type=float, default=5e-5)
    parser.add_argument('--num_epochs', type=int, default=100)
    parser.add_argument('--num_tuine_epochs', type=int, default=80)
    parser.add_argument('--gpu', type=int, default=0)
    parser.add_argument('--seed', type=int, default=-1)
    parser.add_argument('--data_amount', type=int, default=3)
    parser.add_argument('--sinneriter', type=int, default=3)
    parser.add_argument('--tinneriter', type=int, default=1)
    parser.add_argument('--innerlr', type=float, default=5e-5)
    parser.add_argument('--outeriter', type=int, default=20)
    parser.add_argument('--outerlr', type=float, default=1e-4)
    parser.add_argument('--topk', type=int, default=15)
    parser.add_argument('--topk_m', type=int, default=15)
    parser.add_argument('--mmd_w', type=float, default=2)
    parser.add_argument('--et_w', type=float, default=2)
    parser.add_argument("--ma_coef", type=float, default=0.6)
    parser.add_argument("--weight_reg", type=float, default=1e-3)
    parser.add_argument("--pretrain_iter", type=int, default=-1)
    parser.add_argument("--near", type=int, default=1)
    parser.add_argument("--mean", type=int, default=0)
    parser.add_argument("--fix_cos", type=int, default=0)
    parser.add_argument("--c", type=str, default="default")
    parser.add_argument("--scoring", type=int, default=1)
    parser.add_argument("--time_meta", type=int, default=1)
    parser.add_argument("--meta_batch_size", type=int, default=64)
    parser.add_argument("--is_st_weight_static", type=int, default=1)
    parser.add_argument("--time_score_weight", type=float, default=1.0)
    parser.add_argument("--space_score_weight", type=float, default=1.0)
    parser.add_argument("--node_domain_adapt", type=str, default="MMD")
    parser.add_argument("--need_third", type=int, default=0)
    parser.add_argument("--alin_month", type=int, default=0)
    parser.add_argument("--node_adapt", type=str, default="MMD")
    parser.add_argument("--pretrain", type=str, default="supervise")
    parser.add_argument("--tasks_val_rate", type=float, default=0.3)
    parser.add_argument("--tasks_test_rate", type=float, default=0.5)
    parser.add_argument("--need_weight", type=int, default=0)
    parser.add_argument("--cut_data", type=int, default=3312)
    parser.add_argument("--mae_rate", type=float, default=1)
    parser.add_argument("--rmse_rate", type=float, default=1)
    parser.add_argument("--zero_rate", type=float, default=0.01)
    parser.add_argument("--flat_rate", type=float, default=20)
    parser.add_argument("--road_epoch", type=int, default=20)
    parser.add_argument("--threshold", type=float, default=0.2)
    parser.add_argument("--accuracy", type=float, default=0.2)
    parser.add_argument("--s1_amont", type=int, default=200)
    parser.add_argument("--s2_amont", type=int, default=200)
    parser.add_argument("--s3_amont", type=int, default=200)
    parser.add_argument("--s1_rate", type=float, default=0.1)
    parser.add_argument("--s2_rate", type=float, default=0.1)
    parser.add_argument("--s3_rate", type=float, default=0.1)
    parser.add_argument("--test_mode_path", type=str)
    parser.add_argument("--use_linked_region", type=int, default=1)
    parser.add_argument("--need_geo_weight", type=int, default=0)
    parser.add_argument("--geo_dis", type=str, default="MMD")
    parser.add_argument("--need_remark", type=int, default=0)
    parser.add_argument("--geo_rate", type=float, default=1.0)
    parser.add_argument("--time_rate", type=float, default=1.0)
    parser.add_argument("--machine_code", type=str, default="")
    parser.add_argument("--train_number", type=int, default=3)
    parser.add_argument('--dataset', type=str, default='8')
    parser.add_argument('--seeds', type=int, default=0)
    parser.add_argument('--division_seed', type=int, default=0)
    parser.add_argument('--models', type=str, default='DASTNet')
    parser.add_argument('--labelrate', type=float, default=23)
    parser.add_argument('--patience', type=int, default=200)
    parser.add_argument("--hidden_dim", type=int, default=64)
    parser.add_argument("--vec_dim", type=int, default=64)
    parser.add_argument("--enc_dim", type=int, default=64)
    parser.add_argument("--walk_length", "--wl", type=int, default=8)
    parser.add_argument("--num_walks", type=int, default=200)
    parser.add_argument("--theta", type=float, default=1)
    parser.add_argument("--p", type=float, default=1)
    parser.add_argument("--q", type=float, default=1)
    parser.add_argument("--epoch", type=int, default=10)
    parser.add_argument('--device', type=int, default=0)
    parser.add_argument("--seq_len", type=int, default=6)
    parser.add_argument("--pre_len", type=int, default=1)
    parser.add_argument("--split_ratio", type=float, default=0.7)
    parser.add_argument("--alpha", type=float, default=0.1)
    parser.add_argument("--beta", type=float, default=0.2)
    parser.add_argument("--normalize", type=bool, default=True)
    parser.add_argument('--val', action='store_true', default=False)
    parser.add_argument('--test', action='store_true', default=False)
    parser.add_argument('--train', action='store_true', default=False)
    parser.add_argument('--etype', type=str, default="gin", choices=["gin"])
    parser.add_argument("--fine_epoch", type=int, default=80)
    parser.add_argument("--need_road", type=bool, default=True)
    parser.add_argument("--v", type=bool, default=True)
    parser.add_argument("--normal", type=int, default=1)
    parser.add_argument("--meta_ep", type=int, default=5)
    parser.add_argument("--test_ep", type=int, default=50)
    args = parser.parse_args()
    if args.seed != -1:
        random.seed(args.seed)
        np.random.seed(args.seed)
        torch.manual_seed(args.seed)
    return args
